{"version":3,"sources":["App.js","serviceWorker.js","index.js","utils.js"],"names":["App","Vconsole","useState","keyring","Keyring","type","useEffect","window","getMnemonic","bind","getMnemonicInfo","widthdrawlCoin","transfer","val","console","log","createmmn","createMnemnoic","createinfo","getMnemonInfo","data","mnemonic","trim","split","address","u8aToHex","publicKey","seed","result","JSON","stringify","createInfo","transferCall","u","navigator","userAgent","isAndroid","appVersion","indexOf","isiOS","match","stub","transferCallback","webkit","messageHandlers","postMessage","coinType","currentMnemonic","transformCounts","a","publicAccount","addFromUri","name","mnemonicValidate","currentAccount","getApi","api","getModules","moduleMetadata","undefined","b","waitTx","hexToBn","query","system","account","toJSON","free","div","bnToBn","toString","balances0","tx","signAndSend","balances1","balances2","balances3","aimsAddress","checkAddress","balances","testwidthdrawlCoin","currrentAccount","then","catch","err","className","onClick","this","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message","convert","from","to","str","Buffer","sleep","milliseconds","Promise","resolve","setTimeout","signal","events","status","isFinalized","asFinalized","toHex","forEach","phase","event","method","section","d","isModule","mErr","asModule","module","index","errors","provider","WsProvider","types","ApiPromise","create","all","rpc","chain","version","nodeName","nodeVersion","menmonic","mnemonicGenerate","mnomenoic","myAccount","seedBuffer","mnemonicToSeedSync","bufferToU8a","state","getMetadata","metadata","asLatest","modules"],"mappings":"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","file":"static/js/main.59a5b7b2.chunk.js","sourcesContent":["/*\n * @Author: your name\n * @Date: 2020-06-24 17:33:43\n * @LastEditTime: 2020-06-30 17:19:16\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /my-app/src/App.js\n */\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Vconsole from 'vconsole';\nimport { getApi, getModules, getMnemonic, createMnemnoic, getMnemonInfo, waitTx } from './utils';\nimport { Keyring } from '@polkadot/api';\nimport { hexToBn, bnToBn, u8aToHex } from '@polkadot/util';\nimport { mnemonicValidate, checkAddress } from \"@polkadot/util-crypto\";\n\nfunction App () {\n  const vConsole = new Vconsole();\n  const [inputValue, setInputValue] = useState('');\n  const [mnemonic, setmnemonic] = useState('');\n  const keyring = new Keyring({ type: 'sr25519' });\n  // 使用Hook获取到生命周期\n  useEffect(() => {\n    window.getMnemonic = getMnemonic.bind(this);\n    window.getMnemonicInfo = getMnemonicInfo.bind(this);\n    window.widthdrawlCoin = widthdrawlCoin.bind(this);\n    window.transfer = transfer.bind(this);\n  });\n\n\n  //android调起js\n  let getMnemonic = val => {\n    console.log(\"调用h5成功\", val);\n    //生成助记词\n    var createmmn = createMnemnoic();\n    if (createmmn != null) {\n      //通过助记词生成地址公钥等\n      var createinfo = getMnemonInfo(createmmn);\n      var mnemonic = createinfo.mnemonic.trim().split(/\\s+/);\n      var data = {\n        'mnemonic': mnemonic,\n        'address': createinfo.address,\n        'publicKey': u8aToHex(createinfo.publicKey),\n        'seed': u8aToHex(createinfo.seed)\n      };\n      const result = JSON.stringify(data);\n      console.log(\"creasds\", result);\n      return result;\n    }\n  };\n  //通过导入助记词生成地址信息等\n  let getMnemonicInfo = mnemonic => {\n    console.log(\"传过来的助记词\", mnemonic);\n    if (mnemonic != null) {\n      //通过助记词生成地址公钥等\n      var createInfo = getMnemonInfo(mnemonic);\n      var mnemonicFormat = createInfo.mnemonic.trim().split(/\\s+/);\n      var data = {\n        'mnemonic': mnemonicFormat,\n        'address': createInfo.address,\n        'publicKey': u8aToHex(createInfo.publicKey),\n        'seed': u8aToHex(createInfo.seed)\n      };\n      const result = JSON.stringify(data);\n      console.log(\"createInfo\", result);\n      return result;\n    }\n  };\n\n  //js调android或者ios\n  function jsCall (data) {\n    var u = navigator.userAgent,\n      app = navigator.appVersion;\n    var isAndroid = u.indexOf('Android') > -1 || u.indexOf('Linux') > -1; //android终端或者uc浏览器   \n    var isiOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n    if (isAndroid) {\n      window.stub.jsCallbackMethod(data);\n    } else if (isiOS) {\n      window.webkit.messageHandlers.AppModel.postMessage({\n        'str': data\n      });\n\n    }\n    return u;\n  }\n  //js调android或者ios\n  function jstoandroid (data) {\n    console.log(\"jstoandroid\", data);\n    var u = navigator.userAgent,\n      app = navigator.appVersion;\n    var isAndroid = u.indexOf('Android') > -1 || u.indexOf('Linux') > -1; //android终端或者uc浏览器   \n    var isiOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n    if (isAndroid) {\n      console.log(\"jstoandroid\", '成功');\n      window.stub.jsCallbackMethod(u);\n    } else if (isiOS) {\n      window.webkit.messageHandlers.AppModel.postMessage({\n        'str': data\n      });\n    }\n\n  }\n  //js调android或者ios\n  function transferCall (data) {\n    var u = navigator.userAgent,\n      app = navigator.appVersion;\n    var isAndroid = u.indexOf('Android') > -1 || u.indexOf('Linux') > -1; //android终端或者uc浏览器   \n    var isiOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n    if (isAndroid) {\n      window.stub.transferCallback(data);\n    } else if (isiOS) {\n      window.webkit.messageHandlers.transferCallback.postMessage({\n        'str': data\n      });\n\n    }\n    return u;\n  }\n\n  //提现相关操作 就是将当前账户币子转账到指定账户暂定公共账户5FeSTnYZcpjdwf9XBgoY1TZHkwLPWNExELko5CueU4C5H7HB\n  let widthdrawlCoin = async (coinType, currentMnemonic, transformCounts) => {\n    console.log(\"coinType+currentMnemonic+transformCounts\", coinType + \",\" + \",\" + currentMnemonic + \",\" + transformCounts);\n    //提币只有跨链资产才会有所以需要对币种进行判断对应才可转账。\n    const publicAccount = keyring.addFromUri('taxi recycle youth quit health jaguar switch bitter idea defense bleak promote', { name: 'myAccount' });//5FeSTnYZcpjdwf9XBgoY1TZHkwLPWNExELko5CueU4C5H7HB\n    if (!mnemonicValidate(currentMnemonic)) {\n      console.log(\"无效助记词\");\n    }\n    const currentAccount = keyring.addFromUri(currentMnemonic);\n    let api = await getApi();\n    let moduleMetadata = await getModules(api);\n    let [a, b] = [undefined, undefined];\n    [a, b] = waitTx(moduleMetadata);\n    console.log(\"currentAddress+transformCounts\", currentMnemonic + \"||\" + transformCounts);\n    console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(publicAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(currentAccount.address)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    if (coinType === 2) {\n      console.log(\"BTC\", \"\");\n      await api.tx.balances0.transfer(publicAccount.address, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(publicAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(currentAccount.address)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    } else if (coinType === 4) {\n\n      console.log(\"USDT\", \"\");\n      await api.tx.balances1.transfer(publicAccount.address, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(publicAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(currentAccount.address)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    } else if (coinType === 5) {\n      console.log(\"HT\", \"\");\n      await api.tx.balances2.transfer(publicAccount.address, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(publicAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(currentAccount.address)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    } else if (coinType === 3) {\n      console.log(\"ETH\", \"\");\n      await api.tx.balances3.transfer(publicAccount.address, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(publicAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(currentAccount.address)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    }\n\n\n  };\n  //转账操作 只需要币种、当前账户助记词和目标账户地址 参数即可\n  let transfer = async (coinType, aimsAddress, currentMnemonic, transformCounts) => {\n    console.log(\"coinType+aimsAddress+currentMnemonic+transformCounts\", coinType + \",\" + aimsAddress + \",\" + currentMnemonic + \",\" + transformCounts);\n    if (!mnemonicValidate(currentMnemonic)) {\n      console.log(\"无效助记词\");\n    }\n    const [result] = checkAddress(aimsAddress, 42);\n    console.log(\"checkAddress\", result);\n    if (!result) {\n      console.log(\"无效地址\");\n    }\n    const currentAccount = keyring.addFromUri(currentMnemonic);\n    let api = await getApi();\n    let moduleMetadata = await getModules(api);\n    let [a, b] = [undefined, undefined];\n    [a, b] = waitTx(moduleMetadata);\n    console.log(\"currentAddress+transformCounts\", currentAccount.address + \"||\" + transformCounts);\n    console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(aimsAddress)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n\n    if (coinType === 1) {\n      console.log(\"UYT\", \"\");\n      await api.tx.balances.transfer(aimsAddress, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(aimsAddress)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    } else if (coinType === 2) {\n      console.log(\"BTC\", \"\");\n      await api.tx.balances0.transfer(aimsAddress, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(aimsAddress)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    } else if (coinType === 4) {\n      console.log(\"USDT\", \"\");\n      await api.tx.balances1.transfer(aimsAddress, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(aimsAddress)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    } else if (coinType === 5) {\n      console.log(\"HT\", \"\");\n      await api.tx.balances2.transfer(aimsAddress, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(aimsAddress)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n\n    } else if (coinType === 3) {\n      console.log(\"ETH\", \"\");\n      await api.tx.balances3.transfer(aimsAddress, transformCounts).signAndSend(currentAccount, a);\n      await b();\n      console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n      console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(aimsAddress)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n\n    }\n\n  };\n\n\n  //提现相关操作 就是将当前账户币子转账到指定账户暂定公共账户5FeSTnYZcpjdwf9XBgoY1TZHkwLPWNExELko5CueU4C5H7HB\n  let testwidthdrawlCoin = async (coinType, currentMnemonic, transformCounts) => {\n\n    const [result] = checkAddress(currentMnemonic, 42);\n    if (!result) {\n      console.log(\"无效地址\", \"无效地址\");\n      return \"\";\n    }\n    const publicAccount = keyring.addFromUri('taxi recycle youth quit health jaguar switch bitter idea defense bleak promote', { name: 'myAccount' });//5FeSTnYZcpjdwf9XBgoY1TZHkwLPWNExELko5CueU4C5H7HB\n    const currrentAccount = keyring.addFromUri('female tribe recipe trick bargain furnace fitness behave acid invest impose friend');\n\n    let api = await getApi();\n    let moduleMetadata = await getModules(api);\n    let [a, b] = [undefined, undefined];\n    [a, b] = waitTx(moduleMetadata);\n    console.log(\"currentAddress+transformCounts\", currentMnemonic + \"||\" + transformCounts);\n    console.log(\"myAccount可用资金(只看整数部分): \", hexToBn((await api.query.system.account(currrentAccount.address)).toJSON().data.free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    console.log(\"currentAccount可用资金(只看整数部分): \", hexToBn((await api.query.balances0.account(currrentAccount.address)).toJSON().free, false).div(bnToBn(\"1000000000000\")).toString(10));\n    await api.tx.balances.transfer(currrentAccount.address, transformCounts).signAndSend(publicAccount, a).then(a => {\n      transferCall(true);\n      console.log(\"a\");\n    }).catch(err => {\n      transferCall(false);\n      console.log(err);\n    });\n    await b()\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={\n          testwidthdrawlCoin.bind(this, 2, \"5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty\", \"1000000000000\")\n        }>通过助记词生成完整地址</button>\n      </header>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n * @Author: your name\n * @Date: 2020-06-28 11:39:30\n * @LastEditTime: 2020-06-30 17:00:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /my-app/src/utils.js\n */ \nimport {ApiPromise, WsProvider,Keyring} from '@polkadot/api';\nimport {mnemonicGenerate,mnemonicValidate}from \"@polkadot/util-crypto\";\nimport {mnemonicToSeedSync} from 'bip39';\nimport {bufferToU8a} from '@polkadot/util' ;\n\n\n\nconst convert = (from, to) => str => Buffer.from(str, from).toString(to);\nconst utf8ToHex = convert('utf8', 'hex');\nconst hexToUtf8 = convert('hex', 'utf8');\n// api 完成初始化后，再创建 keyring 对象。\n\nfunction sleep(milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\n// 发交易后等待交易敲定\n// substrate交易有入块和敲定2种状态.\n// BTC,ETH只有入块一种状态, 需要等待一个深度, 比如 btc:6, eth:12.\nexport function waitTx(moduleMetadata) {\n    let signal = false;\n    return [\n        ({events = [], status}) => {\n            if (status.isFinalized) { // 交易敲定\n                // 交易成功, 只代表数据入区块链, 交易永远能查到, 哪怕是错误的调用.\n                // 所以, 我们还需要进一步查看是否'合约'执行成功.\n                console.log('%s BlockHash(%s)', status.type, status.asFinalized.toHex());\n                events.forEach(({phase, event: {data, method, section}}) => {\n                    if (\"system.ExtrinsicFailed\" === section + '.' + method) { // 错误\n                        for (let d of data) {\n                            if (d.isModule) {\n                                let mErr = d.asModule;\n                                let module = moduleMetadata[mErr.index];\n                                console.log(\"error: %s.%s\", module.name, module.errors[mErr.error].name);\n                            }\n                        }\n                    } else if (\"system.ExtrinsicSuccess\" === section + '.' + method) {\n                        // ignore\n                    } else { // 事件\n                        console.log(\"event: \" + phase.toString() + ' ' + section + '.' + method + ' ' + data.toString());\n                    }\n                });\n                signal = true;\n            }\n        },\n        async function () {\n            for (; ;) {\n                await sleep(100);\n                if (signal) break;\n            }\n        }\n    ];\n}\n\n\nexport async function getApi() {\n    // Initialize the provider to connect to the local node\n    // const provider = new WsProvider('ws://127.0.0.1:9944');\n    const provider = new WsProvider('ws://59.110.169.240:9944');\n\n    // User defined new types of Miner node\n    const types = {\n        // \"Address\": \"AccountId\",\n        // \"LookupSource\": \"AccountId\",\n        \"Balance\": \"u128\",\n        \"CoinIndex\": \"u8\",\n        \"FixedI64\": \"Fixed64\",\n        \"FixedU128\": \"Fixed128\",\n        \"AccountMine\": {\n            \"entry_point\": \"Fixed128\",\n            \"amount\": \"Fixed128\",\n        },\n    };\n\n    // Create the API and wait until ready\n    const api = await ApiPromise.create({provider, types});\n    // Retrieve the chain & node information information via rpc calls\n    const [chain, nodeName, nodeVersion] = await Promise.all([\n        api.rpc.system.chain(),\n        api.rpc.system.name(),\n        api.rpc.system.version()\n    ]);\n    console.log(`You are connected to chain ${chain} using ${nodeName} v${nodeVersion}`);\n    return api;\n}\n//为name深生成助记词\nexport function getMnemonic(name){\n    const keyring = new Keyring({ type: 'sr25519' });\n    const PHRASE = mnemonicGenerate();\n    const myAccount= keyring.addFromUri(PHRASE, {name: name});\nif (mnemonicValidate(PHRASE)){\n    myAccount['mnemonic'] = PHRASE;\n    let seedBuffer = mnemonicToSeedSync(PHRASE);\n    myAccount['seed']  = bufferToU8a(seedBuffer);\n    return  myAccount;\n}else {\n    return \"生成错误\";\n}\n}\n//随机生成并且验证一个助记词\nexport function createMnemnoic(){\n  var menmonic=mnemonicGenerate();\n  if(mnemonicValidate(menmonic)){\n    return menmonic;\n  }else{\n    return \"无效助记词\";\n  }\n}\n//助记词转换为完整地址信息\nexport function getMnemonInfo(mnomenoic) {\n   \n    const keyring = new Keyring({ type: 'sr25519' });\n    console.log(\"传过来的助记词\",keyring);\n    if (mnemonicValidate(mnomenoic)){\n        console.log(\"sadasfsafsfsaasfasfas\",keyring);\n        const myAccount = keyring.addFromUri(mnomenoic);\n        myAccount['mnemonic'] = mnomenoic\n        let seedBuffer = mnemonicToSeedSync(mnomenoic);\n        myAccount['seed']  = bufferToU8a(seedBuffer);\n        return myAccount;\n    }else {\n       return\"生成错误,无效助剂词\";\n    }\n}\n\nexport  async function getModules(api){\n    const metadata = await api.rpc.state.getMetadata();\n        // console.log('formatted: ' + JSON.stringify(metadata.asLatest.toHuman(), null, 2));\n        // noinspection JSUnresolvedVariable\n        return metadata.asLatest.modules;\n}\n"],"sourceRoot":""}