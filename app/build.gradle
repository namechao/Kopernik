apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        release {
            storeFile file('/Users/zhanglichao/AndroidProject/Kopernik/kopernik.keystore')
            storePassword '123456'
            keyAlias 'kopernik'
            keyPassword '123456'
        }
        debug {
            storeFile file('/Users/zhanglichao/AndroidProject/Kopernik/kopernik.keystore')
            storePassword '123456'
            keyAlias 'kopernik'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }
    dataBinding {
        enabled true
    }
    sourceSets {
//        main {
//            res.srcDirs = ['src/main/res', 'src/main/res-glob']
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        dev {
            applicationId 'com.kopernik.dev'
            resValue "string", "app_name", "kopernik_dev"
            manifestPlaceholders = [APPLICATION_ID: applicationId]
            buildConfigField "boolean", "IS_JUST_TEST", "false"
            versionName = "dev" + rootProject.ext.android.versionName
        }
        online {
            applicationId 'com.kopernik'
            resValue "string", "app_name", "kopernik"
            manifestPlaceholders = [APPLICATION_ID: applicationId]
            buildConfigField "boolean", "IS_JUST_TEST", "false"
            versionName = "V" + rootProject.ext.android.versionName
        }
    }
    applicationVariants.all {
        def buildType = it.buildType.name
        def flavorName = it.flavorName
        def fileName
        def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
        if (buildType == "release") {
            it.getPackageApplicationProvider().get().outputDirectory = new File("/apks/kopernik")
        }
        it.outputs.each {
            if (buildType == "release") {
                fileName = "uyt_${flavorName}_${defaultConfig.versionName}_${createTime}-${buildType}.apk"
                println "文件名：-----------------${fileName}"
                it.outputFileName = fileName
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //依赖model
    implementation project(path: ':mvvmlin')
//    下边是三方依赖
    implementation rootProject.ext.dependencies.banner
    implementation rootProject.ext.dependencies['bottom-tab']
    implementation rootProject.ext.dependencies.BRVAH
    implementation rootProject.ext.dependencies.bdclta
    implementation rootProject.ext.dependencies['bdclta-rv']
    implementation rootProject.ext.dependencies['agentweb']
    implementation rootProject.ext.dependencies['jsbridge']
    implementation rootProject.ext.dependencies['mmkv']
    implementation rootProject.ext.dependencies['qmuiteam:qmui']
    implementation rootProject.ext.dependencies['qmuiteam:arch']
    implementation rootProject.ext.dependencies['android:flexbox']
//    implementation rootProject.ext.dependencies['tbssdk']
    implementation rootProject.ext.dependencies['skin-support']
    implementation rootProject.ext.dependencies['easypermissions']
    implementation rootProject.ext.dependencies['SuperTextView']
    implementation rootProject.ext.dependencies['SmartRefreshHeader']
    implementation rootProject.ext.dependencies['XQRCode']
    implementation rootProject.ext.dependencies['PictureSelector']
    //自动换行
    implementation rootProject.ext.dependencies['wraplayout']
    //沉浸式
    implementation rootProject.ext.dependencies['immersionbar']
    //固定头部
    implementation rootProject.ext.dependencies['PinnedSectionItemDecoration']
    //okhttp的打印日志
    implementation rootProject.ext.dependencies['logging-interceptor']
    //工具类
    implementation rootProject.ext.dependencies['DevUtils']
    //上方tablayout
    implementation rootProject.ext.dependencies['tablayout']
    implementation rootProject.ext.dependencies['SmartRefreshHeader']
    implementation rootProject.ext.dependencies['SmartRefreshLayout']
    implementation rootProject.ext.dependencies['XQRCode']
    implementation rootProject.ext.dependencies['PictureSelector']
    //下载三番  
    implementation rootProject.ext.dependencies['versionchecklib']
    //evenbus
    implementation rootProject.ext.dependencies['eventbus']
    implementation rootProject.ext.dependencies['lottie']
    annotationProcessor rootProject.ext.dependencies['qmuiteam:arch-compiler']

}